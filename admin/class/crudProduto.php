<?php class crudProduto{    private $pdo = null;    private static $crudProduto = null;   private function __construct($conexao){      $this->pdo = $conexao;    }    public static function getInstance($conexao){      if (!isset(self::$crudProduto)):        self::$crudProduto = new crudProduto($conexao);      endif;      return self::$crudProduto;      }     public function insert($pro_nome, $pro_imagem, $pro_categoria, $pro_descricao){       try{        $sql = "INSERT INTO tbl_produtos (pro_nome, pro_imagem, pro_categoria, pro_descricao) VALUES (:pro_nome, :pro_imagem, :pro_categoria, :pro_descricao)";        $stm = $this->pdo->prepare($sql);        $stm->bindValue(':pro_nome', $pro_nome, PDO::PARAM_STR);        $stm->bindValue(':pro_imagem', $pro_imagem, PDO::PARAM_STR);        $stm->bindValue(':pro_categoria', $pro_categoria, PDO::PARAM_STR);        $stm->bindValue(':pro_descricao', $pro_descricao, PDO::PARAM_STR);        $stm->execute();        echo "<script>alert('Produto inserido com sucesso');location.href='gerenciamento_produtos';</script>";       }catch(PDOException $erro){        echo "<script>alert('Erro: {$erro->getMessage()}')</script>";     }       }     public function update($pro_nome, $pro_imagem, $pro_categoria, $pro_descricao, $pro_id){       try{        $sql = "UPDATE tbl_produtos SET pro_nome=:pro_nome, pro_categoria=:pro_categoria, pro_descricao=:pro_descricao";      if($pro_imagem != ''){          $sql .= ", pro_imagem=:pro_imagem";      }      $sql .= "  WHERE pro_id=:pro_id";     $stm = $this->pdo->prepare($sql);      $stm->bindValue(':pro_nome', $pro_nome, PDO::PARAM_STR);     $stm->bindValue(':pro_categoria', $pro_categoria, PDO::PARAM_STR);        $stm->bindValue(':pro_descricao', $pro_descricao, PDO::PARAM_STR);      $stm->bindValue(':pro_id', $pro_id, PDO::PARAM_STR);     if($pro_imagem != ''){         $stm->bindValue(':pro_imagem', $pro_imagem, PDO::PARAM_STR);     }     $stm->execute();        echo "<script>alert('Registro atualizado com sucesso');location.href='gerenciamento_produtos';</script>";       }catch(PDOException $erro){        echo "Erro: {$erro->getMessage()}";       }     }    public function delete($pro_id){            try{        $sql = "DELETE FROM tbl_produtos WHERE pro_id=?";        $stm = $this->pdo->prepare($sql);        $stm->bindValue(1, $pro_id);        $stm->execute();     return 1;      }catch(PDOException $erro){        $error = $erro->getMessage();      return $error;      }          }    public function getAllProdutoByID($pro_id){      try{       $sql = "SELECT * FROM tbl_produtos INNER JOIN tbl_categorias ON(tbl_categorias.cat_id = tbl_produtos.pro_categoria) where pro_id = ?";       $stm = $this->pdo->prepare($sql);      $stm->bindValue(1, $pro_id);     $stm->execute();       $dados = $stm->fetchAll(PDO::FETCH_OBJ);       return $dados;      } catch (PDOException $ex) {    echo 'Erro ao Buscar Dados! - ' . $ex->getMessage();   }    }      public function getAllProdutos(){      try{       $sql = "SELECT * FROM tbl_produtos INNER JOIN tbl_categorias ON(tbl_categorias.cat_id = tbl_produtos.pro_categoria) ORDER BY tbl_produtos.pro_id DESC";       $stm = $this->pdo->prepare($sql);       $stm->execute();       $dados = $stm->fetchAll(PDO::FETCH_OBJ);       return $dados;      }catch(PDOException $erro){       echo "<script>alert('Erro: {$erro->getMessage()}')</script>";    }     }    } 